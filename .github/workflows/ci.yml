name: Rust Node CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'rust-node/**'
      - 'rust-common/**'
      - 'rust-macros/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'rust-node/**'
      - 'rust-common/**'
      - 'rust-macros/**'
      - '.github/workflows/ci.yml'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          submodules: recursive
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: Swatinem/rust-cache@v2
      
      - name: Check code format
        run: cargo fmt --all -- --check
      
      - name: Check with clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --all-features --workspace

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry and target
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ runner.os }}
      
      - name: Build
        run: cargo build --package runar_node --verbose
      
      - name: Build release
        run: cargo build --release --package runar_node --verbose
